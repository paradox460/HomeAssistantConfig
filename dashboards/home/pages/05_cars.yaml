title: Cars
path: cars
icon: mdi:car
type: custom:vertical-layout
badges: []
cards:
  - type: map
    entities:
      - entity: device_tracker.2023_ascent_touring
        name: A
    dark_mode: true
    hours_to_show: 24
  - type: custom:layout-break
  - type: horizontal-stack
    cards:
      - type: gauge
        entity: sensor.2023_ascent_touring_fuel_level
        needle: true
        severity:
          green: 50
          yellow: 25
          red: 0
        name: Fuel Level
      - type: custom:config-template-card
        entities:
          - sensor.2023_ascent_touring_range
        card:
          type: gauge
          entity: sensor.2023_ascent_touring_range
          max: ${parseInt(states['sensor.2023_subaru_ascent_max_range'].state)}
          name: Range
          needle: false
          min: 0
          severity:
            red: 0
            yellow: 100
            green: 150
  - type: glance
    entities:
      - entity: sensor.average_gas_price
      - entity: sensor.2023_subaru_ascent_gas_needed
        name: Gas Needed
      - entity: sensor.2023_subaru_ascent_refuel_cost
        name: Refuel Cost
  - type: custom:apexcharts-card
    config_templates:
      - tufte
    header:
      show: true
      title: Gas Prices
      show_states: true
      colorize_states: true
    graph_span: 10d
    yaxis:
      - decimals: 2
        min: "|-0.01|"
        max: "|0.01|"
    series:
      - entity: sensor.average_gas_price
        stroke_width: 1
        curve: stepline
        show:
          extremas: true
        float_precision: 2
  - type: custom:layout-break
  - show_name: false
    show_icon: true
    show_state: true
    type: glance
    entities:
      - entity: sensor.2023_ascent_touring_tire_pressure_front_left
        name: Front Left
      - entity: sensor.2023_ascent_touring_tire_pressure_front_right
        name: Front Right
      - entity: sensor.2023_ascent_touring_tire_pressure_rear_left
        name: Rear Left
      - entity: sensor.2023_ascent_touring_tire_pressure_rear_right
        name: Rear Right
    columns: 2
    title: Tire Pressure
    state_color: false
  - type: horizontal-stack
    cards:
      - type: statistic
        entity: sensor.2023_ascent_touring_odometer
        period:
          calendar:
            period: day
        stat_type: change
        name: Today
      - type: statistic
        entity: sensor.2023_ascent_touring_odometer
        period:
          calendar:
            period: week
        stat_type: change
        name: This Week
  - type: custom:plotly-graph
    hours_to_show: 10d
    title: Daily driving costs
    config:
      scrollZoom: false
    layout:
      xaxis:
        fixedrange: true
        showgrid: false
        showline: false
      yaxis:
        fixedrange: true
        showgrid: false
        showline: false
    entities:
      - entity: sensor.2023_ascent_touring_average_fuel_consumption
        internal: true
        type: bar
        statistic: mean
        period: day
        filters:
          - resample: 1d
          - map_x: new Date(+x - 3600000 * 17)
          - store_var: mpg
      - entity: sensor.average_gas_price
        internal: true
        statistic: mean
        period: day
        filters:
          - resample: 1d
          - map_x: new Date(+x - 3600000 * 17)
          - store_var: price
      - entity: sensor.2023_ascent_touring_odometer
        type: bar
        statistic: state
        period: day
        name: Cost
        unit_of_measurement: USD
        customdata: |-
          $fn ({statistics, vars}) =>
            statistics.map(({change: distance}, i) => {
              const mpg = vars.mpg.ys[i];
              const price = vars.price.ys[i];
              const gals = distance / mpg;
              return {
                gals,
                price,
                distance
              };
            });
        hovertemplate: >-
          <b>%{x}</b><br> %{y:$.2f}<br> %{customdata.gals:.2f} gal @
          %{customdata.price:$.2f}<br> %{customdata.distance:2,} mi <extra></extra>
        texttemplate: "%{y:$.2f}<br> %{customdata.distance:2,}mi"
        filters:
          - delta
          - resample: 1d
          - map_x: new Date(+x - 3600000 * 17)
          - map_y: |-
              {
                const gals = y / vars.mpg.ys[i];
                return gals * vars.price.ys[i];
              }
